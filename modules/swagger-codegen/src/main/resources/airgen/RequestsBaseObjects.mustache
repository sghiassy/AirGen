

public typealias SourceType = [String:Any]

open class AirGen: NSObject {
    open var definition: [String:Any?] {
        return [:]
    }

    public func serialize() -> [String:Any] {
        return self.definition.reduce([String: Any]()) { dict, e in
            guard let value = e.1 else { return dict }
            var dict = dict
            dict[e.0] = value
            return dict
        }
    }

    open override var description: String {
        return String(describing: serialize())
    }

}

open class AirGenRequest: AirGen {
    public let verb: RequestType
    public let urlDefinition: String

    init(verb: RequestType, urlDefinition: String) {
        self.verb = verb
        self.urlDefinition = urlDefinition
    }
}

open class AirGenHeader: AirGen {
    public func serialize() -> [String:String] {
        return self.definition.reduce([String:String]()) { dict, e in
            guard let value = e.1 as? String else { return dict }
            var dict = dict
            dict[e.0] = value
            return dict
        }
    }
}

open class AirGenQuery: AirGen {
    public func serialize() -> [String:String] {
        return self.definition.reduce([String:String]()) { dict, e in
            guard let value = e.1 as? String else { return dict }
            var dict = dict
            dict[e.0] = value
            return dict
        }
    }
}

open class AirGenPath: AirGen {
    public func serialize() -> [String:String] {
        return self.definition.reduce([String:String]()) { dict, e in
            guard let value = e.1 as? String else { return dict }
            var dict = dict
            dict[e.0] = value
            return dict
        }
    }
}