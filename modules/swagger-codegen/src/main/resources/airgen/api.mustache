{{#operations}}//
// {{classname}}Requests.swift
//
// Generated by AirGen
// Mustache template author: Shaheen Ghiassy (shaheen@groupon.com)
//

//
//       ____  ____     _   ______  ______   __________  __________
//      / __ \/ __ \   / | / / __ \/_  __/  / ____/ __ \/  _/_  __/
//     / / / / / / /  /  |/ / / / / / /    / __/ / / / // /  / /
//    / /_/ / /_/ /  / /|  / /_/ / / /    / /___/ /_/ // /  / /
//   /_____/\____/  /_/ |_/\____/ /_/    /_____/_____/___/ /_/
//
//   THIS FILE WAS AUTO-GENERATED

import AirGap

{{#operation}}
    /**
     {{#summary}}
     {{{summary}}}
     {{/summary}}{{#allParams}}
     - {{paramName}}: ({{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{{description}}} {{^required}}(optional{{#defaultValue}}, default to {{{.}}}{{/defaultValue}}){{/required}}{{/allParams}}
     */
public struct {{operationIdCamelCase}}Request: Codable {

    public typealias Headers = {{^hasHeaderParams}}AirGenericHeaders{{/hasHeaderParams}}{{#hasHeaderParams}}{{operationIdCamelCase}}Request.Header{{/hasHeaderParams}}
    public typealias Body = {{^hasBodyParam}}AirGenericBody{{/hasBodyParam}}{{#hasBodyParam}}{{#bodyParam}}{{dataType}}{{/bodyParam}}{{/hasBodyParam}}

    public static let Definition = URLDefinition(Foundation.URL(string:"{{basePath}}{{{path}}}")!)
    public static let verb: RequestType = .{{httpMethod}}
    public static let transitionType: Browser.TransitionType = .{{> BrowserTransitionType.snippet}}
    public let url: {{^hasParams}}AirGenericURL{{/hasParams}}{{#hasParams}}{{operationIdCamelCase}}Request.URL{{/hasParams}}
    public let headers: {{operationIdCamelCase}}Request.Headers
    public let body: {{operationIdCamelCase}}Request.Body

    public init(url: {{#hasParams}}{{operationIdCamelCase}}Request.URL{{/hasParams}}{{^hasParams}}AirGenericURL = AirGenericURL(url: {{operationIdCamelCase}}Request.Definition.url){{/hasParams}},
    headers: {{#hasHeaderParams}}{{operationIdCamelCase}}Request.Headers{{/hasHeaderParams}}{{^hasHeaderParams}}AirGenericHeaders = AirGenericHeaders(){{/hasHeaderParams}},
    body: {{#hasBodyParam}}{{#bodyParam}}{{dataType}}{{/bodyParam}}{{/hasBodyParam}}{{^hasBodyParam}}AirGenericBody = AirGenericBody(){{/hasBodyParam}}) {
        self.url = url
        self.headers = headers
        self.body = body
    }
}

public extension {{operationIdCamelCase}}Request {
    {{> RequestURL}}
}

{{> RequestParamsPath}}
{{> RequestParamsQuery}}
{{> RequestParamsHeader}}

{{> RequestExtensions}}

{{/operation}}
{{/operations}}
