@objc({{operationIdCamelCase}}RequestURL)
public class URL: NSObject, Codable {


    public let path{{#hasPathParams}}: {{operationIdCamelCase}}Request.URL.Path{{/hasPathParams}}{{^hasPathParams}} = AirGenericPath(){{/hasPathParams}}
    public let query{{#hasQueryParams}}: {{operationIdCamelCase}}Request.URL.Query{{/hasQueryParams}}{{^hasQueryParams}} = AirGenericQuery(){{/hasQueryParams}}

    {{! A terrible way to have to do OR logic in Handlebars }}
    {{! Basically just want hasPathParams OR hasQueryParams }}
    {{#hasPathParams}}
    {{> RequestURLInit.snippet}}
    {{/hasPathParams}}
    {{^hasPathParams}}
    {{#hasQueryParams}}
    {{> RequestURLInit.snippet}}
    {{/hasQueryParams}}
    {{/hasPathParams}}

    public var urlString: String { return AbsoluteStringURL(urlDefinition: {{operationIdCamelCase}}Request.URLDefinition, pathParams:{{#hasPathParams}}self.path.asStringDictionary{{/hasPathParams}}{{^hasPathParams}}nil{{/hasPathParams}}, queryParams:{{#hasQueryParams}}self.query.asStringDictionary{{/hasQueryParams}}{{^hasQueryParams}}nil{{/hasQueryParams}}) }
    public var url: Foundation.URL { return Foundation.URL(string: self.urlString)! } // Note: The URL explicit unwrap is safe here, since all objects are immutable and can't be allocated until the compiler ensures they meet the Swagger Spec
}