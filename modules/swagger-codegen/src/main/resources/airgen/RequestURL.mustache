public class URL: NSObject, Codable {

    public static let verb: RequestType = .{{httpMethod}}
    public static let Definition: String = "{{basePath}}{{{path}}}"

    public var absoluteStringURL: String { return AbsoluteStringURL(urlDefinition: {{operationIdCamelCase}}Request.URL.Definition, params: ["":"self.path.serialize()"]) }
    public var absoluteURL: Foundation.URL { return Foundation.URL(string: self.absoluteStringURL)! } // Note: The URL explicit unwrap is safe here, since all objects are immutable and can't be allocated until the compiler ensures they meet the Swagger Spec
    {{#hasPathParams}}
    public let path: {{operationIdCamelCase}}Request.URL.Path{{/hasPathParams}}{{#hasQueryParams}}
    public let query: {{operationIdCamelCase}}Request.URL.Query{{/hasQueryParams}}

    {{! A terrible way to have to do OR logic in Handlebars }}
    {{! Basically just want hasPathParams OR hasQueryParams }}
    {{#hasPathParams}}
    {{> RequestURLInit.snippet}}
    {{/hasPathParams}}
    {{^hasPathParams}}
    {{#hasQueryParams}}
    {{> RequestURLInit.snippet}}
    {{/hasQueryParams}}
    {{/hasPathParams}}
}